<?php

/**
 * @file
 * Implementation of Calendar Systems un/installation hooks.
 */

/**
 * Implements hook_enable().
 */
function calendar_systems_enable() {
  // Include helpers.
  module_load_include('inc', 'calendar_systems');

  // I know, I'm talking too much!
  $notice = t('Also notice that you need to make <em>patch target files</em> writable for webserver (0646) or you cannot patch them via the web interface of these modules.');
  $warning = t('Even though the <a href="!link">Calendar Systems</a> module is now enabled, it is useless till you properly apply the patch.',
    array('!link' => url('admin/settings/date-time/calendars'))
  );

  $advice = t('It is strongly recommended to use <a href="!patchdoq">Patchdoq</a> or <a href="!patchmanager">Patch Manager</a> to handle core and contrib patches.',
    array(
      '!patchdoq' => module_exists('patchdoq') ? url('admin/build/patchdoq') : 'http://drupal.org/project/patchdoq',
      '!patchmanager' => module_exists('patch_manager') ? url('admin/build/patch') : 'http://drupal.org/project/patch_manager',
    )
  );

  if (!_calendar_systems_patch_applied()) {
    drupal_set_message($warning, 'warning');
    drupal_set_message($advice, 'warning');
    drupal_set_message($notice, 'warning');
  }
  else {
    drupal_set_message(t('<a href="!link">Calendar Systems</a> is now successfully installed and running. The patch is applied to the system.',
      array('!link' => url('admin/settings/date-time/calendars'))
    ));
    drupal_set_message($advice);
  }
}


/**
 * Implements hook_install().
 */
function calendar_systems_install() {
  if (module_exists('patch_manager')) {
    // Include helpers.
    module_load_include('inc', 'calendar_systems');

    // Get proper translator function.
    $t = get_t();

    // Introduce the patch to patch_manager.module.
    if (_calendar_systems_patch_manager_insert()) {
      // Set the proper message.
      $message = $t('Calendar Systems patch has been successfully copied to files directory, Also <em>introduced</em> to <a href ="!patchmanager">Patch Manager</a>.',
        array('!patchmanager' => url('admin/build/patch'))
      );

      if (_calendar_systems_patch_applied()) {
        $type = 'status';
        $message .= ' ' . $t('Anyway you need not to re-apply the patch.');
      }
      else {
        $type = 'warning';
        $message .= ' ' . $t('But it is <u>not yet applied</u>.');
      }

      drupal_set_message($message, $type);
    }
  }
}


/**
 * Implements hook_uninstall().
 */
function calendar_systems_uninstall() {
  // Module API is not available at this point. Using
  // db_query() and LIKE is un-encouraged. So, load the API.
  drupal_load('module', 'calendar_systems');

  // Also include module helpers.
  module_load_include('inc', 'calendar_systems');

  // Remove all calendars settings.
  $calendars = calendar_systems_calendars();
  foreach ($calendars as $identifer => $info) {
    variable_del('calendar_systems_settings_' . $identifier);
  }

  // Say bye to patch_manager.module.
  // @TODO: think! Do we really need to do this?
  _calendar_systems_patch_manager_delete();

  // Remind about those patches.
  if (_calendar_systems_patch_applied()) {
    drupal_set_message(t('Since you just uninstalled the Calendar Systems, you might also want to reverse the applied patch(es).'));
  }
}


/**
 * Implements hook_requirements().
 */
function calendar_systems_requirements($phase) {
  global $base_url;

  // Include helpers.
  module_load_include('inc', 'calendar_systems');

  $t = get_t();
  $patch_info = _calendar_systems_patch_info(TRUE);
  $requirements = array('calendar_systems' => array(
    'title' => $t('Calendar Systems'),
    'value' => $t('Not installed correctly.'),
  ));
  $requirements_error = $t('Calendar Systems <a href="!patch">patch</a> is not applied to <em>!patch_target</em> file, but it is <u>required</u> for the module to work. Please refer to <a href="!docs">Applying Patches Documentation</a> to be able to apply this patch correctly. Also, It is strongly recommended to use <a href="!patchdoq">Patchdoq</a> or <a href="!patchmanager">Patch Manager</a> to handle core and contrib patches.',
    array(
      '!patch' => $base_url . '/' . $patch_info['path'] . $patch_info['name'],
      '!patch_target' => $patch_info['target'],
      '!docs' => 'http://drupal.org/patch/apply',
      '!patchdoq' => module_exists('patchdoq') ? url('admin/build/patchdoq') : 'http://drupal.org/project/patchdoq',
      '!patchmanager' => module_exists('patch_manager') ? url('admin/build/patch') : 'http://drupal.org/project/patch_manager',
    )
  );

  if (_calendar_systems_patch_applied()) {
    $requirements['calendar_systems']['severity'] = REQUIREMENT_OK;
    $requirements['calendar_systems']['value'] = $t('Installed correctly.');
    return $requirements;
  }

  // Allow user to enable the module if there are a 'patch manager' module available.
  if ($phase == 'install' && (module_exists('patchdoq') || module_exists('patch_manager'))) {
    $requirements_severity = REQUIREMENT_WARNING;
  }
  else {
    $requirements_severity = REQUIREMENT_ERROR;
  }

  $requirements['calendar_systems'] += array(
    'severity' => $requirements_severity,
    'description' => $requirements_error,
  );

  return $requirements;
}
